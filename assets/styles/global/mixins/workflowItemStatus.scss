@mixin workflow-status-icon {
  &--new { background-image: url('/static/imgs/image-status/new.svg'); }
  &--annotate { background-image: url('/static/imgs/image-status/annotate.svg'); }
  &--review { background-image: url('/static/imgs/image-status/review.svg'); }
  &--complete { background-image: url('/static/imgs/image-status/completed.svg'); }
  &--uploading { background-image: url('/static/imgs/image-status/uploading.svg'); }
  &--processing { background-image: url('/static/imgs/image-status/uploading.svg'); }
  &--error { background-image: url('/static/imgs/image-status/error.svg'); }
  &--archived { background-image: url('/static/imgs/image-status/archived.svg'); }
  &--rejected { background-image: url('/static/imgs/image-status/reject.svg'); }
}

@mixin wrap($selector, $sufix) {
  @if $selector {
    &--#{$sufix} {
      #{$selector} { @content }
    }
  } @else {
    &--#{$sufix} { @content }
  }
}

@mixin workflow-status($property, $opacity: 1.0, $selector: false) {
  @include wrap($selector, 'new')  { #{$property}: rgba($colorSecondaryLight, $opacity); }
  @include wrap($selector, 'annotate')  { #{$property}: rgba($colorAssignedBlue, $opacity); }
  @include wrap($selector, 'review')  { #{$property}: rgba($colorEgg, $opacity); }
  @include wrap($selector, 'complete')  { #{$property}: rgba($colorPrimaryLight, $opacity); }
  @include wrap($selector, 'archived')  {#{$property}: rgba($colorCrimsonLight, $opacity);}
  @include wrap($selector, 'rejected')  {#{$property}: rgba($colorCrimsonLight, $opacity);}
}

@mixin workflow-status-color {
  @include workflow-status(color)
}

@mixin workflow-status-border-color($opacity: 1.0) {
  @include workflow-status(border-color, $opacity)
}

@mixin workflow-status-background-color($opacity: 1.0) {
  @include workflow-status(background-color, $opacity)
}


